<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Instructables.Views.ContestPage"
    DataContext="{Binding ContestVM, Source={StaticResource Locator}}"
    d:DataContext="{Binding ContestVM, Source={StaticResource Locator}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Instructables.Views"
    xmlns:selectors="using:Instructables.Selectors"
    xmlns:common="using:Instructables.Common"
    xmlns:Converters="using:Instructables.Converters" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="using:Instructables.Utils"
    mc:Ignorable="d" utils:StateHelper.State="{Binding VisualState}">

    <common:LayoutAwarePage.Resources>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converters:GreaterThanNumericVisibilityConverter x:Key="GreaterThanNumericVisibilityConverter"/>
        <selectors:ContestPageContestEntryTemplateSelector x:Key="ContestPageContestEntryTemplateSelector"/>

        <DataTemplate x:Key="PriceItemTemplate">
            <Grid Width="1200" Height="450">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="450" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Source="{Binding square3Url}" Stretch="UniformToFill"/>
                <Grid Grid.Column="1" Background="#FFFFFFFF" Margin="0,0,0,0">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="24"/>
                            <Setter Property="FontFamily" Value="Segoe UI"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Margin="20,10,20,0">
                        <Canvas Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Path Fill="#FFAE01" Data="M18.067,25.354c-0.432-0.419-1.754-1.497-3.22-0.57c-0.631,0.396-0.747,1.051-0.729,1.527
			c0.046,1.332,1.195,3.347,4.292,5.014c0.82,0.441,1.614,0.834,2.39,1.209c-1.551-2.287-2.371-4.368-2.726-7.086
			C18.073,25.422,18.07,25.383,18.067,25.354z"/>
                            <Path Fill="#FFAE01" Data="M49.152,24.783c-1.475-0.921-2.787,0.151-3.219,0.57c-0.004,0.028-0.006,0.068-0.01,0.094
			c-0.354,2.718-1.176,4.799-2.725,7.086c0.775-0.375,1.566-0.768,2.391-1.209c3.094-1.667,4.247-3.682,4.292-5.014
			C49.898,25.834,49.784,25.18,49.152,24.783z"/>
                            <Path Fill="#FFAE01" Data="M31.999,0C14.327,0,0,14.325,0,32c0,17.68,14.327,32,31.999,32C49.682,64,64,49.68,64,32
			C64,14.325,49.682,0,31.999,0z M47.329,34.557c-1.347,0.726-2.646,1.344-3.861,1.922c-2.1,0.996-3.909,1.854-5.147,2.906
			c-1.264,1.075-1.719,2.36-1.885,3.301c0.01,1.394,0.18,2.385,1.539,3.33c2.098,1.459,3.746,2.522,4.358,3.058
			c0.608,0.534,0.763,1.454,0.763,1.454H32.009H31.99H20.905c0,0,0.151-0.92,0.763-1.454c0.613-0.534,2.262-1.599,4.359-3.058
			c1.36-0.947,1.528-1.938,1.537-3.334c-0.164-0.937-0.618-2.222-1.884-3.297c-1.237-1.053-3.049-1.91-5.146-2.906
			c-1.217-0.578-2.518-1.196-3.865-1.922c-3.848-2.073-6.114-5.033-6.22-8.121c-0.067-1.977,0.847-3.757,2.442-4.76
			c1.805-1.132,3.558-1.089,5.009-0.601c-0.044-2.354-0.057-4.728-0.057-4.728h13.916h0.479h13.915c0,0-0.014,2.374-0.057,4.727
			c1.449-0.489,3.203-0.532,5.008,0.602c1.597,1.003,2.51,2.783,2.442,4.76C53.443,29.523,51.182,32.483,47.329,34.557z"/>

                            <Canvas.RenderTransform>
                                <CompositeTransform ScaleY="0.7" ScaleX="0.7"/>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <TextBlock Text="{Binding name}" Foreground="Black" Margin="60,15,10,0" TextWrapping="NoWrap" TextTrimming="WordEllipsis"/>
                    </StackPanel>
                    <RichTextBlock
                            Grid.Row="1"
                            Foreground="Black"
                            FontFamily="Segoe UI"
                            FontSize="18"
                            Margin="40,10,20,0" FontWeight="Normal"
                            TextTrimming="WordEllipsis" 
                            IsTextSelectionEnabled="False"
                            TextWrapping="WrapWholeWords"
                            utils:RichTextBlockHelper.Text="{Binding description, Converter={StaticResource HtmlToXamlStringConverter}}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ContestItemTemplate">
            <Grid Width="260" Height="175">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Image Source="{Binding coverImage.rect840Url}" Stretch="UniformToFill"/>
                <Grid Grid.Row="1" VerticalAlignment="Stretch" Background="#FFFFFFFF" Height="60">


                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding title}" Foreground="Black" FontWeight="SemiBold" FontFamily="Segoe UI" FontSize="18"  Margin="10,0,10,0" TextWrapping="NoWrap" TextTrimming="WordEllipsis" VerticalAlignment="Bottom" IsTextSelectionEnabled="False"/>
                    <TextBlock Grid.Row="1" Text="{Binding ByAuthor}" Foreground="DimGray" FontWeight="Normal" FontFamily="Segoe UI" FontSize="17" TextWrapping="NoWrap" TextTrimming="WordEllipsis" Margin="10,0,10,0" VerticalAlignment="Top" IsTextSelectionEnabled="False" />
                </Grid>
            </Grid>
        </DataTemplate>

        <Style x:Key="TopBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <!--Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard-->
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <!--Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard-->
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <!--Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard-->
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <!--Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard-->
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OfficialRuleButton" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontFamily" Value="Segoe WP"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" BorderBrush="Gray">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard >
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FF1BA1E2"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Background>
                                <SolidColorBrush x:Name="Background" Color="LightSlateGray"/>
                            </Border.Background>
                            <Grid>
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </common:LayoutAwarePage.Resources>

    <Page.TopAppBar>
        <AppBar x:Name="UpperAppBar" AutomationProperties.Name="Top App Bar" Height="120" Background="#FF2D2D2D" VerticalAlignment="Top" BorderThickness="0,0,0,0" BorderBrush="#FF1B1B1B">
            <Grid>
                <StackPanel Orientation="Horizontal" >
                    <Button VerticalAlignment="Stretch" Style="{StaticResource TopBarButtonStyle}" Click="TopHome_Click">
                        <StackPanel Orientation="Horizontal" Margin="20,0">
                            <Canvas  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,20,0,0" Width="50" Height="80">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.7" ScaleY="0.7"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FFFFFF" Data="M50.7,29L34.4,16.9c-1-0.8-2.7-0.8-3.7,0L14.5,29c-1,0.7-1.5,2.4-1.1,3.6l6.2,19.6c0.4,1.2,1.7,2.2,3,2.2
			                        h5.1V39c0-1,0.4-1.9,0.9-1.9h8c0.5,0,0.9,0.8,0.9,1.9v15.3h5.1c1.2,0,2.6-1,3-2.2l6.2-19.6C52.2,31.3,51.7,29.7,50.7,29z"/>
                                <Path Fill="#FFFFFF" Data="M55.7,24.9l-7.5-5.4v-4.6c0-1.5-1-2.7-2.2-2.7h-1.1c-1.2,0-2.2,1.2-2.2,2.7v0.7l-6.9-5
			                        c-1.8-1.3-4.6-1.3-6.4,0L9.5,24.9c-0.7,0.5-0.9,1.6-0.4,2.4c0.5,0.8,1.6,0.9,2.3,0.4l19.9-14.3c0.7-0.5,1.9-0.5,2.6,0l8.8,6.3v0
			                        h0.1l11,7.9c0.7,0.5,1.8,0.3,2.3-0.4C56.6,26.5,56.4,25.4,55.7,24.9z"/>
                            </Canvas>
                            <TextBlock Text="Home" Foreground="White" SelectionHighlightColor="White" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button>
                    <Button VerticalAlignment="Stretch" Style="{StaticResource TopBarButtonStyle}" Click="TopContests_Click" Margin="20,0,0,0">
                        <StackPanel Orientation="Horizontal" Margin="10,0" >
                            <Canvas  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,20,0,0" Width="50" Height="80">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.7" ScaleY="0.7"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FFFFFF" Data="M55.4,19.7c-2.2-1.4-4.4-1.3-6.2-0.7c0.1-2.9,0.1-5.8,0.1-5.8H32.1h-0.6H14.3c0,0,0,2.9,0.1,5.8
		                            c-1.8-0.6-4-0.7-6.2,0.7c-2,1.2-3.1,3.4-3,5.9c0.1,3.8,2.9,7.5,7.7,10c1.7,0.9,3.3,1.7,4.8,2.4c2.6,1.2,4.8,2.3,6.4,3.6
		                            c1.6,1.3,2.1,2.9,2.3,4.1c0,1.7-0.2,2.9-1.9,4.1c-2.6,1.8-4.6,3.1-5.4,3.8c-0.8,0.7-0.9,1.8-0.9,1.8h13.7h0h13.7
		                            c0,0-0.2-1.1-0.9-1.8c-0.8-0.7-2.8-2-5.4-3.8c-1.7-1.2-1.9-2.4-1.9-4.1c0.2-1.2,0.8-2.8,2.3-4.1c1.5-1.3,3.8-2.4,6.4-3.6
		                            c1.5-0.7,3.1-1.5,4.8-2.4c4.8-2.6,7.6-6.2,7.7-10C58.5,23.1,57.4,20.9,55.4,19.7z M15,31.6c-3.8-2.1-5.2-4.6-5.3-6.2
		                            c0-0.6,0.1-1.4,0.9-1.9c1.8-1.1,3.4,0.2,4,0.7c0,0,0,0.1,0,0.1c0.4,3.4,1.5,5.9,3.4,8.8C17,32.6,16,32.2,15,31.6z M48.6,31.6
		                            c-1,0.5-2,1-3,1.5c1.9-2.8,2.9-5.4,3.4-8.8c0,0,0-0.1,0-0.1c0.5-0.5,2.2-1.8,4-0.7c0.8,0.5,0.9,1.3,0.9,1.9
		                            C53.8,27.1,52.4,29.6,48.6,31.6z"/>

                            </Canvas>
                            <TextBlock Text="Contests" Foreground="White" SelectionHighlightColor="White" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button>
                    <!--<Button VerticalAlignment="Stretch" Style="{StaticResource TopBarButtonStyle}" Margin="20,0,0,0">
                        <StackPanel Orientation="Horizontal" Margin="10,0" >
                            <Canvas  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,20,0,0" Width="50" Height="80">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.7" ScaleY="0.7"/>
                                </Canvas.RenderTransform>
                                <Path Fill="White" Data="M39.321,22.188h-6.141c-0.646-1.287-1.295-2.588-1.431-2.86c-0.282-0.567-1.267-2.833-2.833-2.833H23.25
			                        c-1.565,0-2.55,2.266-2.833,2.833c-0.136,0.271-0.785,1.573-1.431,2.86H6.25c-1.565,0-2.834,1.269-2.834,2.833v22.669
			                        c0,1.566,1.269,2.834,2.834,2.834h39.667c1.566,0,2.834-1.268,2.834-2.834V31.507C43.58,31.507,39.386,27.345,39.321,22.188z
			                         M26.083,49.096c-7.031,0-12.75-5.717-12.75-12.748s5.719-12.75,12.75-12.75s12.751,5.719,12.751,12.75
			                        S33.114,49.096,26.083,49.096z"/>
                                <Path Fill="White" Data="M51.067,10.421c-5.209,0-9.435,4.225-9.435,9.435c0,5.211,4.226,9.435,9.435,9.435
			                        c5.211,0,9.436-4.224,9.436-9.435C60.503,14.646,56.278,10.421,51.067,10.421z M55.283,21.692h-2.379v2.379
			                        c0,1.015-0.822,1.837-1.837,1.837c-1.014,0-1.837-0.823-1.837-1.837v-2.379h-2.378c-1.015,0-1.837-0.822-1.837-1.837
			                        s0.822-1.837,1.837-1.837h2.378v-2.379c0-1.014,0.823-1.836,1.837-1.836c1.015,0,1.837,0.822,1.837,1.836v2.379h2.379
			                        c1.016,0,1.837,0.823,1.837,1.837S56.299,21.692,55.283,21.692z"/>
                                <Path Fill="White" Data="M26.296,25.72c-5.904,0-10.691,4.788-10.691,10.692c0,5.902,4.788,10.691,10.691,10.691
			                        c5.904,0,10.689-4.789,10.689-10.691C36.985,30.507,32.2,25.72,26.296,25.72z M26.296,44.43c-4.421,0-8.019-3.598-8.019-8.018
			                        c0-4.423,3.597-8.019,8.019-8.019c4.422,0,8.019,3.596,8.019,8.019C34.314,40.832,30.718,44.43,26.296,44.43z"/>

                            </Canvas>
                            <TextBlock Text="Create" Foreground="White" SelectionHighlightColor="White" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button>-->
                    <Button VerticalAlignment="Stretch" Style="{StaticResource TopBarButtonStyle}" Click="TopMyInstructables_Click" Margin="20,0,0,0">
                        <StackPanel Orientation="Horizontal" Margin="10,0" >
                            <Canvas  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,20,0,0" Width="50" Height="80">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.7" ScaleY="0.7"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FFFFFF" Data="M52.4,22.8c-1.5,0-1.6,0-1.7,0l-0.5-2.5c-0.1-0.6-0.2-1.5-0.5-3c-1-5.7-4.6-6.5-6.7-6.5
		                            c-0.6,0-1.1,0.1-1.7,0.2l-29.4,5.4c-1.8,0.3-3.3,1.3-4.3,2.8c-1,1.5-1.4,3.3-1.1,5l4.1,22.7c0.6,3.2,3.4,5.5,6.6,5.5
		                            c0.3,0,0.6,0,0.9-0.1c0.7,1.8,2.4,3.2,4.5,3.2h30.3c2.6,0,4.8-2.1,4.8-4.8V30.8c0,0,0,2.7,0-2.1C57.6,24.5,55.8,22.8,52.4,22.8z
		                             M14.5,46l-4.1-22.7c-0.1-0.7,0-1.5,0.4-2.1c0.4-0.6,1.1-1,1.8-1.2L42,14.8c0.4-0.1,0.7-0.1,1-0.1c0.8,0,2.2,0,2.9,3.3
		                            c0.2,1,0.3,1.7,0.4,2.1l0,0l0.5,2.7H22.5c-2.6,0-4.8,2.1-4.8,4.8v20.7l-0.1,0C16.2,48.6,14.7,47.5,14.5,46z"/>
                            </Canvas>
                            <TextBlock Text="My Instructables" Foreground="White" SelectionHighlightColor="White" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button>
                    <Button VerticalAlignment="Stretch" Style="{StaticResource TopBarButtonStyle}" Click="TopProfile_Click" Margin="20,0,0,0">
                        <StackPanel Orientation="Horizontal" Margin="10,0" >
                            <Canvas  RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,20,0,0" Width="50" Height="80">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.6" ScaleY="0.6"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FFFFFF" Data="M47.4,41.3c-3.3-1.7-9.3-3.1-9.3-6.2c0-3.1,6.2-5.1,6.2-18.5c0-6.2-6.2-9.3-12.4-9.3
		                            c-6.2,0-12.4,3.1-12.4,9.3c0,13.4,6.2,15.4,6.2,18.5c0,3.1-5.9,4.5-9.3,6.2c-6.2,3.1-7.8,3.9-9.3,6.2c0,2.4,0,9.3,0,9.3h49.4
		                            c0,0,0-6.8,0-9.3C55.3,45.2,53.6,44.4,47.4,41.3z"/>
                            </Canvas>
                            <TextBlock Text="Profile" Foreground="White" SelectionHighlightColor="White" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="5" Fill="#FF1B1B1B"/>
            </Grid>
        </AppBar>
    </Page.TopAppBar>
    <Page.BottomAppBar>
        <AppBar x:Name="LowerAppBar" Padding="10,0,10,0" IsSticky="{Binding IsLowerAppBarSticky}" Background="#FF2D2D2D" Foreground="Black" Closed="LowerAppBar_OnClosed" IsOpen="{Binding LowerAppBarIsOpen, Mode=TwoWay}" AutomationProperties.Name="Bottom App Bar" BorderBrush="#FF1B1B1B">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel x:Name="RightPanel" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" >
                    <Button x:Name="RefreshData" Style="{StaticResource RefreshAppBarButtonStyle}" Click="OnRefresh"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}" Background="#fff6f6f6">
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

       

        <!--<Image Source="ms-appx:///Assets/DesignerBackground.jpg" Grid.RowSpan="2" Stretch="UniformToFill" />-->
        <Grid x:Name="contestsPanel" Grid.Row="1">
            <!--
            The body of the page in most view states uses an items controls to create multiple radio buttons
            for filtering above a horizontal scrolling grid of search results
        -->
            <Hub>
                <HubSection>
                    <DataTemplate>
                        <Grid Margin="0,0,0,20">
                            <TextBlock  Text="Info" Margin ="60,-100,0,0" FontSize="24" Foreground="Black" FontWeight="Bold"
                                        Visibility="{Binding ContestInfoVisible}"/>
                            <Grid Width="520" Background="White" MinHeight="560" Margin="60,-65,0,0" Visibility="{Binding ContestInfoVisible}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="80"/>
                                </Grid.RowDefinitions>
                                <ScrollViewer Grid.Row="0" VerticalAlignment="Top" ZoomMode="Disabled">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.Row="0" Height="200" Source="{Binding Contest.headerUrl}" Stretch="UniformToFill"/>
                                        <RichTextBlock
                                            Grid.Row="1"
                                            x:Name="ContestBodyTextBlock"
                                            Foreground="Black"
                                            FontFamily="Segoe UI"
                                            FontSize="18"
                                            FontWeight="Light"
                                            Margin="10,0,10,0"
                                            Padding="10"
                                            TextTrimming="WordEllipsis" 
                                            IsTextSelectionEnabled="False"
                                            TextWrapping="WrapWholeWords"
                                            utils:RichTextBlockHelper.Text="{Binding Contest.body, Converter={StaticResource HtmlToXamlStringConverter}}">
                                        </RichTextBlock>
                                    </Grid>
                                </ScrollViewer>
                                <Button Grid.Row="1"
                                        Margin="10,10,10,10"
                                        Click="Rules_Button_Click"
                                        Content="Offical Rules"
                                        Style="{ThemeResource OfficialRuleButton}">
                                </Button>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </HubSection>
                <HubSection>
                    <DataTemplate>
                        <Grid>
                            <TextBlock Text="Entries" Margin ="0,-100,0,0" FontSize="24" Foreground="Black" FontWeight="Bold"
                                       Visibility ="{Binding ContestEntriesVisible}" />
                                       <!--Visibility="{Binding ContestEntriesCollect.Count, Converter={StaticResource GreaterThanNumericVisibilityConverter}, ConverterParameter=0}"/>-->
                            <GridView
                                x:Name="entriesGridView"
                                AutomationProperties.AutomationId="EntriesGridView"
                                AutomationProperties.Name="Entries"
                                TabIndex="1"
                                Grid.Row="1"
                                Margin="-3,-70,0,0"                                
                                SelectionMode="None"
                                IsSwipeEnabled="false"
                                IsItemClickEnabled="True" ItemClick="EntryItemClicked"
                                ItemsSource="{Binding ContestEntriesCollect}"
                                ItemTemplateSelector="{StaticResource ContestPageContestEntryTemplateSelector}"
                                ItemContainerStyle="{StaticResource ExploreGridViewItemStyle}"
                                >

                            </GridView>
                        </Grid>
                    </DataTemplate>
                </HubSection>
                <HubSection>
                    <DataTemplate>
                        <Grid>
                            <TextBlock Text="Prizes" Margin ="0,-100,0,0" FontSize="24" Foreground="Black" FontWeight="Bold"
                                       Visibility="{Binding PrizeVisible}"/>
                            <GridView
                                x:Name="pricesGridView"
                                AutomationProperties.AutomationId="PricesGridView"
                                AutomationProperties.Name="Prices"
                                TabIndex="1"
                                Grid.Row="1"
                                Margin="0,-70,0,0"                                
                                SelectionMode="None"
                                IsSwipeEnabled="false"                                
                                ItemsSource="{Binding Contest.prizes}"
                                ItemTemplate="{StaticResource PriceItemTemplate}"
                                ItemContainerStyle="{StaticResource ExploreGridViewItemStyle}">

                            </GridView>
                        </Grid>
                    </DataTemplate>
                </HubSection>
            </Hub>
            
        </Grid>

        <!-- Back button, page title and subtitles-->
        <Grid Grid.Row="0" x:Name="contestKeyWord" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding Contest.title}" IsHitTestVisible="false" Foreground="Black" VerticalAlignment="Center" FontFamily="Segoe UI" TextTrimming="WordEllipsis" MaxWidth="1000" MaxHeight="75" SelectionHighlightColor="Black" FontWeight="Normal" FontSize="45" />
        </Grid>


        <ProgressBar Grid.Row="0" x:Name="LoadingPanel" Visibility="Collapsed" IsIndeterminate="True" Maximum="400" VerticalAlignment="Top" Margin="0,5,0,0" />
        <Border x:Name="networkErrorBorder" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" BorderBrush="#FFF5AC00" BorderThickness="0,0,0,0" Background="White" Visibility="Collapsed">
            <Grid x:Name="networkErrorGrid" Background="#FF5F5F5F">
                <Path Margin="10, 0, 0, 10" Fill="White" Data="M34.221,31.137L20.938,7.894c-0.516-0.903-1.363-0.903-1.88,0L5.776,31.137
	c-0.515,0.907-0.085,1.646,0.956,1.646h26.533C34.309,32.783,34.738,32.044,34.221,31.137 M18.973,15.758h2.016
	c0.605,0,0.695,0.352,0.695,0.564l-0.006,0.182l-0.015,0.211l-0.415,7.39c-0.06,0.553-0.305,0.662-0.712,0.662h-1.074
	c-0.406,0-0.653-0.109-0.714-0.678l-0.415-7.371l-0.011-0.214l-0.008-0.182C18.314,16.11,18.401,15.758,18.973,15.758 M20.006,29.95
	c-1.059,0-1.918-0.853-1.918-1.901c0-1.077,0.844-1.92,1.918-1.92c1.051,0,1.903,0.859,1.903,1.92
	C21.909,29.08,21.036,29.95,20.006,29.95z"/>
                <TextBlock x:Name="networkErrorText" Foreground="White" FontWeight="SemiBold" TextWrapping="Wrap" Text="OFFLINE" VerticalAlignment="Top" Margin="50,10,10,0" FontSize="20" HorizontalAlignment="Left"/>
            </Grid>
        </Border>
        <Grid x:Name="networkErrorPane" Grid.Row="1" Width="600" Background="Transparent" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Path Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="180,0,0,0" Fill="#FFBFBFBF" Data="M34.221,31.137L20.938,7.894c-0.516-0.903-1.363-0.903-1.88,0L5.776,31.137
	c-0.515,0.907-0.085,1.646,0.956,1.646h26.533C34.309,32.783,34.738,32.044,34.221,31.137 M18.973,15.758h2.016
	c0.605,0,0.695,0.352,0.695,0.564l-0.006,0.182l-0.015,0.211l-0.415,7.39c-0.06,0.553-0.305,0.662-0.712,0.662h-1.074
	c-0.406,0-0.653-0.109-0.714-0.678l-0.415-7.371l-0.011-0.214l-0.008-0.182C18.314,16.11,18.401,15.758,18.973,15.758 M20.006,29.95
	c-1.059,0-1.918-0.853-1.918-1.901c0-1.077,0.844-1.92,1.918-1.92c1.051,0,1.903,0.859,1.903,1.92
	C21.909,29.08,21.036,29.95,20.006,29.95z">
                <Path.RenderTransform>
                    <ScaleTransform ScaleX="5" ScaleY="5"/>
                </Path.RenderTransform>
            </Path>
            <TextBlock Grid.Row="1" Foreground="#FFBFBFBF" FontWeight="SemiBold" Text="You are not connected to the Internet." FontSize="32" HorizontalAlignment="Center"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped in addition to more extensive changes:
                    * The query text becomes the page header
                    * A different representation for filter selection and search results is used
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="queryText" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="typicalPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="20,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BaselineTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="networkErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Double>NaN</x:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="networkErrorButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>20,0,0,20</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="networkErrorImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>0,20,20,0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="networkErrorImage">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <VerticalAlignment>Top</VerticalAlignment>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="networkErrorText">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>20,220,20,100</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="networkErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>20,0,20,40</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="networkErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Double>NaN</x:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name = "ResultStates">
                <VisualState x:Name="ResultsFound" />
                <!-- When there are no results, the results panel is replaced with an informational TextBlock -->
                <VisualState x:Name="NoResultsFound">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="resultsPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="noResultsTextBlock" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>


            <VisualStateGroup x:Name="OfflineStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Offline">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="networkErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Visibility)" Storyboard.TargetName="networkErrorPane">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
