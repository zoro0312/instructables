<common:LayoutAwarePage
    x:Class="Instructables.Views.VotingContests"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Instructables.Views"
    xmlns:common="using:Instructables.Common"
    xmlns:Converters="using:Instructables.Converters" 
    xmlns:viewModels="using:Instructables.ViewModels" xmlns:selectors="using:Instructables.Selectors"
    xmlns:utils="using:Instructables.Utils"
    x:Name="pageRoot"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <common:LayoutAwarePage.Resources>
        <Converters:StepHeaderFormatterConverter x:Key="StepHeaderFormatterConverter"/>
        <Converters:DateToStringConverter x:Key="DateToStringConverter"/>
        <Converters:DebugConverter x:Key="DebugConverter"/>
        <Converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converters:EmptyStringVisibilityConverter x:Key="EmptyStringVisibilityConverter"/>
        <CollectionViewSource
    		x:Name="VotingContestsViewSource"
            IsSourceGrouped="True"
    		Source="{Binding VotableContests}" ItemsPath="VotableContestsGroup"
    		d:Source="{Binding VotableContests, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=viewModels:InstructableDetailViewModel}}"/>
        <SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="CheckBoxPressedBackgroundThemeBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="CheckBoxPressedBorderThemeBrush" Color="Gray"/>
        <SolidColorBrush x:Key="CheckBoxPressedForegroundThemeBrush" Color="Gray"/>
        <Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
        <x:Double x:Key="TextStyleLargeFontSize">16</x:Double>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <Thickness x:Key="CheckBoxAndRadioButtonTextPaddingThickness">10,0,0,0</Thickness>
        <x:Double x:Key="CheckBoxAndRadioButtonMinWidthSize">16</x:Double>
        <Thickness x:Key="PhoneTouchTargetLargeOverhang">0,16</Thickness>
        <SolidColorBrush x:Key="CheckBoxDisabledBackgroundThemeBrush" Color="Transparent"/>
        <Style x:Key="VotingCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="{ThemeResource CheckBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
            <Setter Property="MinWidth" Value="{ThemeResource CheckBoxAndRadioButtonMinWidthSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--PointerDownThemeAnimation Storyboard.TargetName="Grid"/-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="Grid" Margin="{ThemeResource PhoneTouchTargetLargeOverhang}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25.5"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" VerticalAlignment="Top">
                                    <Border x:Name="CheckBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" VerticalAlignment="Center" Width="25.5"/>
                                    <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" HorizontalAlignment="Center" Height="13" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="13"/>
                                    <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="18.5"/>
                                </Grid>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontWeight="Normal" FontSize="{ThemeResource TextStyleLargeFontSize}" FontFamily="{ThemeResource PhoneFontFamilyNormal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="60"/>
        </Style>
        <Style x:Key="VotingListViewItemStyle" TargetType="ListViewItem">
            <!--Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/-->
            <!--Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/-->
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="OuterContainer">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="PointerOverPressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualState x:Name="VerticalSelectionHint"/>
                                    <VisualState x:Name="HorizontalSelectionHint"/>
                                    <VisualState x:Name="NoSelectionHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselecting"/>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="UnselectedPointerOver"/>
                                    <VisualState x:Name="UnselectedSwiping"/>
                                    <VisualState x:Name="Selecting"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedSwiping"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary"/>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint"/>
                                    <VisualState x:Name="TopReorderHint"/>
                                    <VisualState x:Name="RightReorderHint"/>
                                    <VisualState x:Name="LeftReorderHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="ContentContainer">
                                    <Grid x:Name="InnerDragContent">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </common:LayoutAwarePage.Resources>

    <common:LayoutAwarePage.DataContext>
        <Binding Path="DetailVM" Source="{StaticResource Locator}"/>
    </common:LayoutAwarePage.DataContext>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="6*"/>
        </Grid.RowDefinitions>
        <FlyoutBase.AttachedFlyout>
            <Flyout x:Name="Voting_Error">
                <Grid Height="180" Width="300">
                    <TextBlock x:Name="votingResultTitle" HorizontalAlignment="Left" Height="46" Margin="10,10,0,0" TextWrapping="Wrap" Text="Too Many Entries" VerticalAlignment="Top" Width="185" FontFamily="Segoe WP" FontSize="20" FontWeight="Bold"/>
                    <TextBlock x:Name="votingResult" HorizontalAlignment="Left" Height="35" Margin="20,70,0,0" TextWrapping="WrapWholeWords" Text="" VerticalAlignment="Top" Width="263" FontSize="12" FontFamily="Segoe WP" Grid.Row="3"/>
                    <Button x:Name="voting_error_ok" Content="OK" HorizontalAlignment="Left" Height="21" Margin="94,120,0,0" VerticalAlignment="Top" Width="5" Click="voting_error_ok_Click"/>
                </Grid>
            </Flyout>
        </FlyoutBase.AttachedFlyout>
        <Grid Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6*"/>
                </Grid.ColumnDefinitions>
                <Canvas Grid.Column="0" Margin="15,20,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Path Fill="#FFA7A9AC" Data="M18.067,25.354c-0.432-0.419-1.754-1.497-3.22-0.57c-0.631,0.396-0.747,1.051-0.729,1.527
			c0.046,1.332,1.195,3.347,4.292,5.014c0.82,0.441,1.614,0.834,2.39,1.209c-1.551-2.287-2.371-4.368-2.726-7.086
			C18.073,25.422,18.07,25.383,18.067,25.354z"/>
                    <Path Fill="#FFA7A9AC" Data="M49.152,24.783c-1.475-0.921-2.787,0.151-3.219,0.57c-0.004,0.028-0.006,0.068-0.01,0.094
			c-0.354,2.718-1.176,4.799-2.725,7.086c0.775-0.375,1.566-0.768,2.391-1.209c3.094-1.667,4.247-3.682,4.292-5.014
			C49.898,25.834,49.784,25.18,49.152,24.783z"/>
                    <Path Fill="#FFA7A9AC" Data="M31.999,0C14.327,0,0,14.325,0,32c0,17.68,14.327,32,31.999,32C49.682,64,64,49.68,64,32
			C64,14.325,49.682,0,31.999,0z M47.329,34.557c-1.347,0.726-2.646,1.344-3.861,1.922c-2.1,0.996-3.909,1.854-5.147,2.906
			c-1.264,1.075-1.719,2.36-1.885,3.301c0.01,1.394,0.18,2.385,1.539,3.33c2.098,1.459,3.746,2.522,4.358,3.058
			c0.608,0.534,0.763,1.454,0.763,1.454H32.009H31.99H20.905c0,0,0.151-0.92,0.763-1.454c0.613-0.534,2.262-1.599,4.359-3.058
			c1.36-0.947,1.528-1.938,1.537-3.334c-0.164-0.937-0.618-2.222-1.884-3.297c-1.237-1.053-3.049-1.91-5.146-2.906
			c-1.217-0.578-2.518-1.196-3.865-1.922c-3.848-2.073-6.114-5.033-6.22-8.121c-0.067-1.977,0.847-3.757,2.442-4.76
			c1.805-1.132,3.558-1.089,5.009-0.601c-0.044-2.354-0.057-4.728-0.057-4.728h13.916h0.479h13.915c0,0-0.014,2.374-0.057,4.727
			c1.449-0.489,3.203-0.532,5.008,0.602c1.597,1.003,2.51,2.783,2.442,4.76C53.443,29.523,51.182,32.483,47.329,34.557z"/>

                    <Canvas.RenderTransform>
                        <CompositeTransform ScaleY="0.7" ScaleX="0.7"/>
                    </Canvas.RenderTransform>
                </Canvas>
                <TextBlock Grid.Column="1" Text="Contests" Margin="25,30,0,23" FontSize="28" SelectionHighlightColor="Black" Foreground="Black" HorizontalAlignment="Left" FontFamily="Segoe WP" IsTextScaleFactorEnabled="False" VerticalAlignment="Center" Width="123" Height="48" />
            </Grid>
        </Grid>
        <ListView x:Name="ContestsListView" IsItemClickEnabled="True" SelectionMode="Single" SelectedItem="{Binding VotableContests, Mode=TwoWay}" Grid.Row="1" Padding="0,0,0,0" ItemsSource="{Binding Source={StaticResource VotingContestsViewSource}}" ItemContainerStyle="{StaticResource VotingListViewItemStyle}" Margin="0" Background="White">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="0,0,0,2" BorderBrush="#FFEEEEEE" Margin="10,0,10,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Stretch="UniformToFill" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                <Image.Source>
                                    <BitmapImage UriSource="{Binding thumbUrl}"/>
                                </Image.Source>
                            </Image>
                            <TextBlock Grid.Column="1"  Text="{Binding title}" Foreground="Black" FontFamily="Segoe WP" FontSize="18" IsTextScaleFactorEnabled="False" VerticalAlignment="Center" Margin="10,0,10,0" FontWeight="SemiBold" TextTrimming="WordEllipsis" SelectionHighlightColor="Black" TextWrapping="WrapWholeWords" HorizontalAlignment="Left" TextLineBounds="TrimToBaseline" LineStackingStrategy="BaselineToBaseline"/>
                            <CheckBox Grid.Column="2" Style="{StaticResource VotingCheckBoxStyle}" IsChecked="{Binding votedFor}" Click="Voting_Click" BorderBrush="#FFABABAB" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Foreground="#FFABABAB"/>
                        </Grid>
                    </Border>

                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <ProgressBar Grid.Row="0" x:Name="LoadingPanel" IsIndeterminate="True" Maximum="400" VerticalAlignment="Top" Margin="0,5,0,0" />
    </Grid>
    <Page.BottomAppBar>
        <CommandBar Background="White" Foreground="Black">
            <AppBarButton TabIndex="0" x:Name="Vote" Icon="Accept" Label="vote" Click="AppBarButton_Vote_Click" Foreground="Black"/>
        </CommandBar>
    </Page.BottomAppBar>
</common:LayoutAwarePage>
