<common:LayoutAwarePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Instructables.Views"
    xmlns:common="using:Instructables.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converters="using:Instructables.Converters" 
    xmlns:viewModels="using:Instructables.ViewModels" xmlns:selectors="using:Instructables.Selectors"
    xmlns:utils="using:Instructables.Utils"
    x:Name="pageRoot"
    x:Class="Instructables.Views.InstructableDetail"
    mc:Ignorable="d" utils:StateHelper.State="{Binding VisualState}">

    <common:LayoutAwarePage.Resources>
        <Converters:StepHeaderFormatterConverter x:Key="StepHeaderFormatterConverter"/>
        <Converters:DateToStringConverter x:Key="DateToStringConverter"/>
        <Converters:DebugConverter x:Key="DebugConverter"/>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>
        <Converters:EmptyStringVisibilityConverter x:Key="EmptyStringVisibilityConverter"/>
        <CollectionViewSource
    		x:Name="groupedItemsViewSource"
    		IsSourceGrouped="true"
    		Source="{Binding Steps}" ItemsPath="Steps"
    		d:Source="{Binding Steps, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=viewModels:InstructableDetailViewModel}}"/>
        <Style TargetType="TextBlock" x:Key="TitleStyle">
            <Setter Property="FontFamily" Value="Segoe WP Bold"></Setter>
            <Setter Property="FontSize" Value="36"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="IsTextScaleFactorEnabled" Value="False"/>
        </Style>
        <Style x:Key="ListViewSnappedItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="OuterContainer">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="PointerOverPressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualState x:Name="VerticalSelectionHint"/>
                                    <VisualState x:Name="HorizontalSelectionHint"/>
                                    <VisualState x:Name="NoSelectionHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselecting"/>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="UnselectedPointerOver"/>
                                    <VisualState x:Name="UnselectedSwiping"/>
                                    <VisualState x:Name="Selecting"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedSwiping"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary"/>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint"/>
                                    <VisualState x:Name="TopReorderHint"/>
                                    <VisualState x:Name="RightReorderHint"/>
                                    <VisualState x:Name="LeftReorderHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="ContentContainer">
                                    <Grid x:Name="InnerDragContent">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="OuterContainer">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="PointerOverPressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualState x:Name="VerticalSelectionHint"/>
                                    <VisualState x:Name="HorizontalSelectionHint"/>
                                    <VisualState x:Name="NoSelectionHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselecting"/>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="UnselectedPointerOver"/>
                                    <VisualState x:Name="UnselectedSwiping"/>
                                    <VisualState x:Name="Selecting"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedSwiping"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary"/>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint"/>
                                    <VisualState x:Name="TopReorderHint"/>
                                    <VisualState x:Name="RightReorderHint"/>
                                    <VisualState x:Name="LeftReorderHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="ContentContainer">
                                    <Grid x:Name="InnerDragContent">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridViewItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"></Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <Border x:Name="OuterContainer">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="PointerOverPressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualState x:Name="VerticalSelectionHint"/>
                                    <VisualState x:Name="HorizontalSelectionHint"/>
                                    <VisualState x:Name="NoSelectionHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselecting"/>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="UnselectedPointerOver"/>
                                    <VisualState x:Name="UnselectedSwiping"/>
                                    <VisualState x:Name="Selecting"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedSwiping"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary"/>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint"/>
                                    <VisualState x:Name="TopReorderHint"/>
                                    <VisualState x:Name="RightReorderHint"/>
                                    <VisualState x:Name="LeftReorderHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="ContentContainer">
                                    <Grid x:Name="InnerDragContent">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Thickness x:Key="PhoneBorderThickness">5</Thickness>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <FontWeight x:Key="PhoneButtonFontWeight">Semibold</FontWeight>
        <x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
        <x:Double x:Key="PhoneButtonMinHeight">57.5</x:Double>
        <x:Double x:Key="PhoneButtonMinWidth">109</x:Double>
        <Thickness x:Key="PhoneTouchTargetOverhang">0,9.5</Thickness>
        <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush" Color="#AAFFA800"/>
        <SolidColorBrush x:Key="ButtonDisabledForegroundBrush" Color="#AAFFFFFF"/>
        <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="#FFFFA800"/>
        <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="White"/>
        <SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush2" Color="Transparent"/>
        <SolidColorBrush x:Key="FollowedButtonBackgroundThemeBrush" Color="#FFF1C93E"/>
        <SolidColorBrush x:Key="FollowedButtonForegroundThemeBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="UnfollowedButtonBackgroundThemeBrush" Color="Gray"/>
        <SolidColorBrush x:Key="UnfollowedButtonForegroundThemeBrush" Color="#FFFFFFFF"/>
        <Style x:Key="FollowedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="Padding" Value="9.5,0"/>
            <Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
            <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Grid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--PointerDownThemeAnimation Storyboard.TargetName="Grid"/-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonUnfollowedDisabledBackgroundBrush" Color="#AADDDDDD"/>
        <SolidColorBrush x:Key="ButtonUnfollowedDisabledForegroundBrush" Color="#AA676767"/>
        <SolidColorBrush x:Key="ButtonUnfollowedPressedBackgroundBrush" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="ButtonUnfollowedPressedForegroundBrush" Color="#FF676767"/>
        <Style x:Key="UnfollowedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="Padding" Value="9.5,0"/>
            <Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
            <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Grid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--PointerDownThemeAnimation Storyboard.TargetName="Grid"/-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonUnfollowedPressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonUnfollowedPressedBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonUnfollowedDisabledForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonUnfollowedDisabledBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AuthorButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="Padding" Value="9.5,0"/>
            <Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
            <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Grid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Default style for Windows.UI.Xaml.Controls.AppBarButton -->
        <!-- Default style for Windows.UI.Xaml.Controls.AppBarButton -->
        <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="Transparent" />
        <SolidColorBrush x:Key="AppBarItemDisabledForegroundThemeBrush" Color="#66000000" />
        <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarItemPointerOverBackgroundThemeBrush" Color="#3D000000" />
        <SolidColorBrush x:Key="AppBarItemPointerOverForegroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarItemPressedForegroundThemeBrush" Color="Red" />
        <FontFamily x:Key="ContentControlThemeFontFamily">Segoe UI</FontFamily>
        <SolidColorBrush x:Key="FocusVisualBlackStrokeThemeBrush" Color="Red" />
        <SolidColorBrush x:Key="FocusVisualWhiteStrokeThemeBrush" Color="Red" />
        <Style x:Key="MyAppBarButtonStyle" TargetType="AppBarButton">
            <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <!-- FullSize is used when we are in landscape or filled mode -->
                                    <VisualState x:Name="FullSize"/>
                                    <!-- Compact is used when we are in portrait or snapped mode -->
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                            </ObjectAnimationUsingKeyFrames-->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                                            </>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames-->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualWhite"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                            <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualBlack"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <StackPanel VerticalAlignment="Top" Margin="0,14,0,13">
                                <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                    <Ellipse
                                        x:Name="BackgroundEllipse"
                                        UseLayoutRounding="False"
                                        Width="40"
                                        Height="40"
                                        Fill="{ThemeResource AppBarItemBackgroundThemeBrush}"/>
                                    <Ellipse
                                        x:Name="OutlineEllipse"
                                        UseLayoutRounding="False"
                                        Width="40"
                                        Height="40"
                                        Stroke="{ThemeResource AppBarItemForegroundThemeBrush}"
                                        StrokeThickness="2" />
                                    <ContentPresenter
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        AutomationProperties.AccessibilityView="Raw"/>
                                </Grid>
                                <TextBlock
                                    x:Name="TextLabel"
                                    Text="{TemplateBinding Label}"
                                    Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                    FontSize="12"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    TextAlignment="Center"
                                    Width="88"
                                    TextWrapping="Wrap"/>
                            </StackPanel>
                            <Rectangle
                                x:Name="FocusVisualWhite"
                                IsHitTestVisible="False"
                                Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="1.5"/>
                            <Rectangle
                                x:Name="FocusVisualBlack"
                                IsHitTestVisible="False"
                                Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="0.5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedBackgroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedBorderThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledBackgroundThemeBrush" Color="#66000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledBorderThemeBrush" Color="Transparent" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedDisabledForegroundThemeBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush" Color="#99000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBorderThemeBrush" Color="#99000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBackgroundThemeBrush" Color="Transparent" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBorderThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedForegroundThemeBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="AppBarToggleButtonCheckedForegroundThemeBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="AppBarToggleButtonPointerOverBackgroundThemeBrush" Color="#3D000000" />
        <Style x:Key="MyAppBarToggleButton" TargetType="AppBarToggleButton">
            <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarToggleButton">
                        <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <!-- FullSize is used when we are in landscape or filled mode -->
                                    <VisualState x:Name="FullSize"/>
                                    <!-- Compact is used when we are in portrait or snapped mode -->
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPointerOverBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarToggleButtonCheckedDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation
                          Storyboard.TargetName="FocusVisualWhite"
                          Storyboard.TargetProperty="Opacity"
                          To="1"
                          Duration="0"/>
                                            <DoubleAnimation
                          Storyboard.TargetName="FocusVisualBlack"
                          Storyboard.TargetProperty="Opacity"
                          To="1"
                          Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <StackPanel VerticalAlignment="Top" Margin="0,14,0,13">
                                <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                    <Ellipse
                  x:Name="BackgroundEllipse"
                  UseLayoutRounding="False"
                  Width="40"
                  Height="40"
                  Fill="{ThemeResource AppBarItemBackgroundThemeBrush}"/>
                                    <Ellipse
                  x:Name="OutlineEllipse"
                  UseLayoutRounding="False"
                  Width="40"
                  Height="40"
                  Stroke="{ThemeResource AppBarItemForegroundThemeBrush}"
                  StrokeThickness="2" />
                                    <ContentPresenter
                  x:Name="Content"
                  Content="{TemplateBinding Icon}"
                  Foreground="{TemplateBinding Foreground}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  AutomationProperties.AccessibilityView="Raw"/>
                                </Grid>
                                <TextBlock
                x:Name="TextLabel"
                Text="{TemplateBinding Label}"
                Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                FontSize="12"
                FontFamily="{TemplateBinding FontFamily}"
                TextAlignment="Center"
                Width="88"
                TextWrapping="Wrap"/>
                            </StackPanel>
                            <Rectangle
              x:Name="FocusVisualWhite"
              IsHitTestVisible="False"
              Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
              StrokeEndLineCap="Square"
              StrokeDashArray="1,1"
              Opacity="0"
              StrokeDashOffset="1.5"/>
                            <Rectangle
              x:Name="FocusVisualBlack"
              IsHitTestVisible="False"
              Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
              StrokeEndLineCap="Square"
              StrokeDashArray="1,1"
              Opacity="0"
              StrokeDashOffset="0.5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <x:Double x:Key="FlyoutThemeMinHeight">43</x:Double>
        <Thickness x:Key="FlyoutContentPanelPortraitThemeMargin">5,5,5,5</Thickness>
        <Thickness x:Key="FlyoutContentPanelLandscapeThemeMargin">5,5,5,5</Thickness>
        <x:Double x:Key="FlyoutThemeMaxHeight">718</x:Double>
        <x:Double x:Key="FlyoutThemeMaxWidth">450</x:Double>
        <x:Double x:Key="FlyoutThemeMinWidth">70</x:Double>
        <Thickness x:Key="FlyoutBorderThemeThickness">0</Thickness>
        <Thickness x:Key="MenuFlyoutPresenterThemePadding">10,5,10,5</Thickness>
        <SolidColorBrush x:Key="FlyoutBackgroundThemeBrush" Color="White" />
        <SolidColorBrush x:Key="MenuFlyoutBorderThemeBrush" Color="Transparent" />
        <Style x:Key="FlagFlyoutStyle" TargetType="MenuFlyoutPresenter">
            <Setter Property="RequestedTheme" Value="Light" />
            <Setter Property="Background" Value="{StaticResource FlyoutBackgroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource MenuFlyoutBorderThemeBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource FlyoutBorderThemeThickness}" />
            <Setter Property="Padding" Value="{StaticResource MenuFlyoutPresenterThemePadding}" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="MinWidth" Value="{StaticResource FlyoutThemeMinWidth}" />
            <Setter Property="MaxWidth" Value="{StaticResource FlyoutThemeMaxWidth}" />
            <Setter Property="MinHeight" Value="{StaticResource FlyoutThemeMinHeight}" />
            <Setter Property="MaxHeight" Value="{StaticResource FlyoutThemeMaxHeight}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuFlyoutPresenter">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                  HorizontalScrollMode="Disabled"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollMode="Disabled"
                                  VerticalScrollBarVisibility="Hidden"
                                  IsHorizontalRailEnabled="False"
                                  IsVerticalRailEnabled="False"
                                  ZoomMode="Disabled"
                                  AutomationProperties.AccessibilityView="Content">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBarBorderThemeBrush" Color="Transparent"/>
        <Thickness x:Key="ProgressBarBorderThemeThickness">0</Thickness>
        <x:Double x:Key="ProgressBarThemeMinHeight">3.5</x:Double>
        <x:Double x:Key="ProgressBarIndeterminateRectagleThemeSize">3.5</x:Double>
        <SolidColorBrush x:Key="ProgressBarForegroundThemeBrush" Color="Orange" />
        <SolidColorBrush x:Key="ProgressBarBackgroundThemeBrush" Color="Transparent"/>
        <Style x:Key="MyProgressBarStyle" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ProgressBarBorderThemeThickness}"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="MinHeight" Value="{ThemeResource ProgressBarThemeMinHeight}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Key="ProgressBarRectangleStyle" TargetType="Rectangle">
                                    <Setter Property="Width" Value="{ThemeResource ProgressBarIndeterminateRectagleThemeSize}"/>
                                    <Setter Property="Height" Value="{ThemeResource ProgressBarIndeterminateRectagleThemeSize}"/>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Updating" To="Determinate">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.IndicatorLengthDelta, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetName="ProgressBarIndicator"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Paused" To="Determinate">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Indeterminate">
                                            <Storyboard>
                                                <FadeInThemeAnimation Storyboard.TargetName="EllipseGrid"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Determinate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighContrastBtmAccentBar"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighContrastRitAccentBar"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Updating"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Duration="0:0:3.917" From="{Binding TemplateSettings.ContainerAnimationStartPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.ContainerAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="EllipseGrid"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseIn" Exponent="16"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="80"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="80"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="80"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="80"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="80"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EllipseGrid"/>
                                            <FadeOutThemeAnimation Storyboard.TargetName="DeterminateRoot"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DeterminateRoot"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Error">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Paused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="EllipseGrid" Opacity="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RenderTransform>
                                    <TranslateTransform/>
                                </Grid.RenderTransform>
                                <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform/>
                                    </Border.RenderTransform>
                                    <Rectangle x:Name="E1" Fill="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RenderTransformOrigin="0.5,0.5" Style="{ThemeResource ProgressBarRectangleStyle}">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                                <Rectangle Grid.Column="7" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform/>
                                    </Border.RenderTransform>
                                    <Rectangle x:Name="E2" Fill="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RenderTransformOrigin="0.5,0.5" Style="{ThemeResource ProgressBarRectangleStyle}">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                                <Rectangle Grid.Column="5" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform/>
                                    </Border.RenderTransform>
                                    <Rectangle x:Name="E3" Fill="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RenderTransformOrigin="0.5,0.5" Style="{ThemeResource ProgressBarRectangleStyle}">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                                <Rectangle Grid.Column="3" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform/>
                                    </Border.RenderTransform>
                                    <Rectangle x:Name="E4" Fill="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RenderTransformOrigin="0.5,0.5" Style="{ThemeResource ProgressBarRectangleStyle}">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                                <Rectangle Grid.Column="1" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TranslateTransform/>
                                    </Border.RenderTransform>
                                    <Rectangle x:Name="E5" Fill="{ThemeResource ProgressBarIndeterminateForegroundThemeBrush}" RenderTransformOrigin="0.5,0.5" Style="{ThemeResource ProgressBarRectangleStyle}">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                            </Grid>
                            <Rectangle x:Name="HighContrastBtmAccentBar" Fill="{ThemeResource ProgressBarHighContrastAccentBarThemeBrush}" Height="0.8" Opacity="0" VerticalAlignment="Bottom"/>
                            <Rectangle x:Name="HighContrastRitAccentBar" Fill="{ThemeResource ProgressBarHighContrastAccentBarThemeBrush}" HorizontalAlignment="Right" Opacity="0" Width="0.8"/>
                            <Border x:Name="DeterminateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="{TemplateBinding MinHeight}">
                                <Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </common:LayoutAwarePage.Resources>

    <common:LayoutAwarePage.DataContext>
        <Binding Path="DetailVM" Source="{StaticResource Locator}"/>
    </common:LayoutAwarePage.DataContext>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ListView x:Name="MainContentListView" SelectionMode="None" Grid.Row="1" Padding="0,0,0,0" ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}" ItemContainerStyle="{StaticResource ListViewItemContainerStyle}" Margin="0,0,0,0" Background="White" MinWidth="{Binding fitwidth}" SelectionChanged="MainContentListView_SelectionChanged">
            <ListView.Header>
                    <Grid HorizontalAlignment="Stretch" Margin="20,10,20,20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="0,0,0,5" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" BorderThickness="0,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Top" Height="80" Width="100" Style="{StaticResource AuthorButtonStyle}" Click="Profile_Click" Margin="-15,0,0,0">
                                <Canvas Grid.Column="0">
                                    <Path Stroke="White" StrokeThickness="1">
                                        <Path.Fill>
                                            <ImageBrush Stretch="UniformToFill" ImageSource="{Binding SelectedInstructable.author.tinyUrl}"/>
                                        </Path.Fill>
                                        <Path.Data>
                                            <EllipseGeometry Center="0,0" RadiusX="32" RadiusY="32"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Button>
                            <TextBlock Style="{StaticResource DefaultText}" x:Name="AuthorTextBlock" Grid.Column="1" Text="{Binding SelectedInstructable.author.screenName}" Margin="-10,0,0,0" VerticalAlignment="Center" FontSize="18" FontWeight="SemiBold" SelectionHighlightColor="Black" TextTrimming="CharacterEllipsis" IsTextScaleFactorEnabled="False"/>
                            <Button x:Name="Following" Grid.Column="2" Click="FollowAuthor" IsEnabled="{Binding FollowEnable}" Visibility="{Binding IsFollowing, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"  Background="#FFFFA800" BorderBrush="{x:Null}" Content="Follow" HorizontalAlignment="Right" BorderThickness="0" FontSize="18" VerticalAlignment="Center" Height="30" Width="100" Style="{StaticResource FollowedButtonStyle}" Margin="0,10,0,0" IsTextScaleFactorEnabled="False"/>
                            <Button x:Name="Unfollowing" Grid.Column="2" Click="UnfollowAuthor" IsEnabled="{Binding FollowEnable}" Visibility="{Binding IsFollowing, Converter={StaticResource BooleanToVisibilityConverter}}"  Background="#FFDDDDDD" BorderBrush="{x:Null}" Content="Following" HorizontalAlignment="Right" BorderThickness="0" FontSize="18" VerticalAlignment="Center" Height="30" Width="100" Style="{StaticResource UnfollowedButtonStyle}" Margin="0,10,0,0" Foreground="#FF676767" IsTextScaleFactorEnabled="False"/>
                        </Grid>
                        <Rectangle Grid.Row="1" VerticalAlignment="Bottom" Fill="#FFEEEEEE" Stroke="#FFEEEEEE" Height="1" Margin="0,0,0,0"/>
                        <TextBlock Grid.Row="2" Text="{Binding SelectedInstructable.title}" Foreground="#DE000000" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Margin="0,15,15,10" FontSize="32" FontFamily="Segoe WP" FontWeight="SemiBold" LineStackingStrategy="BaselineToBaseline" TextLineBounds="TrimToBaseline" IsTextScaleFactorEnabled="False"/>
                        <Grid Grid.Row="3" Margin="0,10" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding SelectedInstructable.author.byScreenName}" FontFamily="Segoe WP" Foreground="Black" Margin="0,0,0,-3" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="17" FontWeight="SemiBold" IsTextScaleFactorEnabled="False"/>
                                <TextBlock Grid.Row="1" Text="{Binding SelectedInstructable.PublishDate, ConverterParameter=MMMM dd\, yyyy, Converter={StaticResource DateToStringConverter}}" FontFamily="Segoe WP" Foreground="Gray" Margin="0,2,0,0" VerticalAlignment="Top" FontSize="17" IsTextScaleFactorEnabled="False"/>
                            </Grid>
                        </Grid>
                        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="0,-15,0,0">
                            <Canvas Height="30" Width="80" Margin="-28,-6,0,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.35" ScaleY="0.35"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FF008FB8" Data="M4.168,29.828l-0.034,2.099c12.278,21.224,42.757,21.619,55.699,0.802l0.033-2.104
			                        C47.588,9.405,17.112,9.006,4.168,29.828z M32.323,43.857c-6.97-0.115-12.522-5.854-12.412-12.815
			                        c0.111-6.969,5.841-12.521,12.813-12.411c6.959,0.109,12.52,5.841,12.412,12.811C45.025,38.404,39.287,43.967,32.323,43.857z"/>
                                <Path Fill="#FF008FB8" Data="M32.117,24.948c-3.474,0.224-6.113,3.217-5.888,6.701c0.226,3.475,3.227,6.11,6.701,5.887
			                        c3.479-0.224,6.113-3.228,5.891-6.701C38.592,27.352,35.592,24.723,32.117,24.948z"/>
                            </Canvas>
                            <TextBlock Text="{Binding SelectedInstructable.views}" Foreground="Gray" Margin="-28,5,20,0" FontFamily="Segoe WP" FontSize="18" IsTextScaleFactorEnabled="False"/>
                            <Canvas Height="30" Width="60" Margin="-30,-5,0,0" RenderTransformOrigin="0.5,0.5">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.32" ScaleY="0.32"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FFC01989" Data="M55.275,14.529c-5.318-5.808-16.268-3.328-22.592,5.666c-8.012-9.659-17.579-11.473-22.913-5.666
		                        C-5.072,30.692,26.699,53.925,32.462,56.538v0.073c0.015-0.004,0.048-0.024,0.06-0.03c0.015,0.006,0.054,0.026,0.074,0.03v-0.073
		                        C38.354,53.925,70.119,30.692,55.275,14.529"/>

                            </Canvas>
                            <TextBlock Text="{Binding SelectedInstructable.favorites}" Foreground="Gray" Margin="-15,5,20,0" FontFamily="Segoe WP" FontSize="18" IsTextScaleFactorEnabled="False"/>
                            <Canvas Height="30"  Width="60" Margin="-28,-5,0,0" RenderTransformOrigin="0.5,0.5">
                                <Canvas.RenderTransform>
                                    <CompositeTransform ScaleX="0.35" ScaleY="0.35"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FF8FBF3F" Data="M27.695,46.557h21.53c4.308,0,8.613-4.307,8.613-8.611V20.721c0-4.307-4.307-8.612-8.613-8.612H14.776
			                        c-4.307,0-8.613,4.306-8.613,8.612v17.224c0,4.306,4.306,8.611,8.613,8.611v12.918L27.695,46.557z"/>
                            </Canvas>
                            <TextBlock Text="{Binding SelectedInstructable.comments}" Foreground="Gray" Margin="-15,5,10,0" FontFamily="Segoe WP" FontSize="18" IsTextScaleFactorEnabled="False"/>
                        </StackPanel>

                    </Grid>
            </ListView.Header>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <local:PortraitSectionView/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Visibility="{Binding ShowTitle, Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding StepTitle}" Foreground="Black" FontFamily="Segoe WP" FontSize="22" VerticalAlignment="Top" Margin="10,10,15,10" FontWeight="SemiBold" SelectionHighlightColor="Black" TextWrapping="Wrap" IsTextScaleFactorEnabled="False"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <Grid Margin="0,0,0,0" />
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <ProgressBar Grid.Row="0" x:Name="LoadingPanel" IsIndeterminate="True" Maximum="400" VerticalAlignment="Top" Margin="0,5,0,0" />
        <local:PhotoFlipView Grid.RowSpan="3" Visibility="{Binding ShowPhotoViewer, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="-5"/>
        <local:VideoFullScreenView Grid.RowSpan="3"  Visibility="{Binding ShowVideoViewer, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <FlyoutBase.AttachedFlyout>
            <Flyout x:Name="Flag_Result">
                <Grid Height="180" Width="300">
                    <TextBlock HorizontalAlignment="Left" Height="46" Margin="10,10,0,0" TextWrapping="Wrap" Text="Flag result" VerticalAlignment="Top" Width="131" FontFamily="Segoe WP" FontSize="20" FontWeight="Bold" IsTextScaleFactorEnabled="False"/>
                    <TextBlock x:Name="flagResult" HorizontalAlignment="Left" Height="35" Margin="20,70,0,0" TextWrapping="WrapWholeWords" Text="" VerticalAlignment="Top" Width="263" FontSize="12" FontFamily="Segoe WP" Grid.Row="3" IsTextScaleFactorEnabled="False"/>
                    <Button x:Name="flag_result_ok" Content="ok" HorizontalAlignment="Center" Height="21" Margin="0,120,0,0" VerticalAlignment="Center" Width="5" Click="flag_result_ok_Click"/>
                </Grid>
            </Flyout>
        </FlyoutBase.AttachedFlyout>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar x:Name="DetailAppBar" Background="White" Foreground="Black" >
            <AppBarButton TabIndex="0" x:Name="Share" Label="share" Click="AppBarButton_Share_Click" Foreground="Black">
                <AppBarButton.Icon>
                    <PathIcon Width="48" Height="48" Data="M13.777,20.283c2.053,0,3.718,1.663,3.718,3.717c0,1.176-0.546,2.221-1.397,2.904
		c1.174,3.57,4.452,6.186,8.368,6.391c0,1.442,0.597,2.741,1.554,3.672L24.93,37.01c-5.993,0-11.041-4.051-12.551-9.563
		C11.02,26.893,10.06,25.558,10.06,24C10.06,21.946,11.723,20.283,13.777,20.283z M29.111,10.989c2.054,0,3.719,1.664,3.719,3.717
		c0,2.052-1.665,3.717-3.719,3.717c-2.049,0-3.711-1.658-3.718-3.706c-0.154-0.007-0.308-0.012-0.464-0.012
		c-3.61,0-6.741,2.06-8.28,5.065c-0.819-0.558-1.808-0.883-2.874-0.883l-0.846,0.069c1.969-4.682,6.599-7.969,11.999-7.969
		c0.938,0,1.856,0.099,2.74,0.289C28.115,11.091,28.6,10.989,29.111,10.989z M29.576,29.576c0.821,0,1.579,0.267,2.192,0.716
		c1.524-1.655,2.453-3.866,2.453-6.292c0-2.03-0.65-3.909-1.756-5.438c1.032-0.9,1.702-2.206,1.753-3.671
		c2.304,2.347,3.722,5.563,3.722,9.11c0,4.034-1.835,7.641-4.72,10.027c-0.34,1.702-1.844,2.982-3.645,2.982
		c-2.052,0-3.717-1.663-3.717-3.717S27.524,29.576,29.576,29.576z" >
                    </PathIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton TabIndex="1" x:Name="Like"  Icon="Dislike" Label="favorite" Click="AppBarButton_Like_Click"/>
            <AppBarButton TabIndex="2" x:Name="Comment" Label="comments" Click="AppBarButton_Comment_Click" Foreground="Pink">
                <AppBarButton.Icon>
                    <PathIcon Width="48" Height="48" Data="M32.301,15.969H16.262c-1.366,0-2.474,1.108-2.474,2.473v9.182c0,1.366,1.108,2.474,2.474,2.474h1.229v5.647
	l5.716-5.647h9.094c1.366,0,2.474-1.107,2.474-2.474v-9.181C34.774,17.078,33.667,15.969,32.301,15.969z">
                    </PathIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton TabIndex="3" x:Name="Voting" Label="vote" Click="AppBarButton_Voting_Click" Foreground="Black">
                <AppBarButton.Icon>
                    <PathIcon Width="48" Height="48" Data="M35.557,18.115c-1.048-0.66-2.072-0.635-2.915-0.35c0.024-1.369,0.032-2.751,0.032-2.751h-8.101h-0.278
			h-8.1c0,0,0.006,1.382,0.031,2.752c-0.843-0.285-1.865-0.31-2.915,0.349c-0.93,0.584-1.462,1.621-1.422,2.77
			c0.062,1.798,1.381,3.521,3.621,4.727c0.786,0.423,1.541,0.781,2.248,1.119c1.222,0.577,2.278,1.08,2.997,1.692
			c0.737,0.626,1.002,1.377,1.097,1.922c-0.004,0.811-0.104,1.387-0.895,1.94c-1.223,0.85-2.181,1.468-2.537,1.777
			c-0.356,0.313-0.444,0.846-0.444,0.846h6.453h0.01h6.457c0,0-0.092-0.533-0.446-0.846c-0.356-0.31-1.318-0.928-2.536-1.777
			c-0.793-0.553-0.89-1.128-0.896-1.938c0.097-0.547,0.361-1.297,1.099-1.924c0.719-0.612,1.773-1.113,2.996-1.692
			c0.707-0.339,1.461-0.697,2.248-1.119c2.241-1.207,3.558-2.929,3.624-4.727C37.021,19.734,36.485,18.699,35.557,18.115z
			 M16.524,23.731c-1.803-0.971-2.473-2.145-2.5-2.919c-0.01-0.277,0.058-0.658,0.425-0.888c0.854-0.541,1.625,0.087,1.875,0.331
			c0.001,0.018,0.002,0.041,0.005,0.055c0.207,1.583,0.683,2.795,1.585,4.125C17.463,24.216,17.001,23.99,16.524,23.731z
			 M32.349,23.731c-0.481,0.258-0.941,0.485-1.394,0.704c0.902-1.332,1.381-2.542,1.587-4.125c0.002-0.014,0.002-0.038,0.005-0.055
			c0.253-0.243,1.016-0.868,1.875-0.331c0.367,0.23,0.434,0.611,0.426,0.888C34.817,21.587,34.148,22.762,32.349,23.731z" >
                    </PathIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton TabIndex="3" x:Name="Voted" Label="vote" Click="AppBarButton_Voting_Click" Foreground="Black">
                <AppBarButton.Icon>
                    <PathIcon  Width="48" Height="48" Data="M30.585,18.725c-4.289,0-7.771,3.48-7.771,7.773s3.482,7.773,7.771,7.773c4.294,0,7.774-3.48,7.774-7.773
			S34.879,18.725,30.585,18.725z M34.495,23.881L29.3,30.227l-2.606-2.941c-0.269-0.302-0.212-0.743,0.131-0.982
			c0.341-0.238,0.832-0.188,1.104,0.116l1.321,1.493l3.976-4.853c0.258-0.312,0.75-0.382,1.101-0.154
			C34.675,23.133,34.752,23.571,34.495,23.881z
                               M20.447,26.317c0-5.215,4.23-9.445,9.444-9.445c0.462,0,0.908,0.044,1.349,0.106c0.018-1.059,0.021-1.965,0.021-1.965
			h-7.84h-0.269h-7.843c0,0,0.006,1.337,0.031,2.663c-0.817-0.274-1.806-0.298-2.822,0.34c-0.899,0.566-1.415,1.568-1.376,2.683
			c0.06,1.74,1.336,3.407,3.505,4.577c0.761,0.407,1.492,0.756,2.177,1.082c1.182,0.561,2.203,1.047,2.901,1.636
			c0.712,0.606,0.969,1.33,1.061,1.858c-0.003,0.784-0.1,1.344-0.865,1.877c-1.182,0.825-2.111,1.423-2.457,1.725
			s-0.431,0.817-0.431,0.817h6.247h0.011h1.523C22.189,32.594,20.447,29.662,20.447,26.317z M15.627,23.454
			c-1.745-0.941-2.393-2.075-2.419-2.826c-0.009-0.269,0.056-0.638,0.412-0.862c0.826-0.521,1.571,0.086,1.815,0.322
			c0.001,0.017,0.002,0.039,0.005,0.052c0.198,1.532,0.659,2.706,1.533,3.994C16.537,23.922,16.09,23.702,15.627,23.454z" >
                    </PathIcon>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton TabIndex="0" x:Name="OK" Icon="Accept" Label="ok" Click="AppBarButton_OK_Click" Foreground="Black"/>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Name="Flag" Label="flag this instructable" Click="AppBarButton_Flag_Click" Foreground="Black" Background="White">
                    <AppBarButton.Flyout>
                        <MenuFlyout Closed="Flag_Flyout_Closing">
                            <MenuFlyoutItem Text="Inappropriate" Click="AppBarButton_Inapropraite_Click" IsTextScaleFactorEnabled="False"/>
                            <MenuFlyoutItem Text="Spam" Click="AppBarButton_Spam_Click" IsTextScaleFactorEnabled="False"/>
                            <MenuFlyoutItem Text="Incomplete" Click="AppBarButton_Incomplete_Click" IsTextScaleFactorEnabled="False"/>
                            <MenuFlyoutItem Text="Wrong Category" Click="AppBarButton_Wrong_Category_Click" IsTextScaleFactorEnabled="False"/>
                            <MenuFlyoutItem Text="Cancel" Click="AppBarButton_Cancel_Click" IsTextScaleFactorEnabled="False"/>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <!--<AppBarButton x:Name="Setting" Label="settings" Click="AppBarButton_Setting_Click"/>-->
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</common:LayoutAwarePage>
